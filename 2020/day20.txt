Setup:

    >>> from io import StringIO
    >>> from day20 import (
    ...     Image, ImageAssembler, MonsterFinder, Side, Tile,
    ...     orientate_until, parse_data, part1, part2
    ... )

    >>> tiles = parse_data(StringIO("""\
    ... Tile 2311:
    ... ..##.#..#.
    ... ##..#.....
    ... #...##..#.
    ... ####.#...#
    ... ##.##.###.
    ... ##...#.###
    ... .#.#.#..##
    ... ..#....#..
    ... ###...#.#.
    ... ..###..###
    ... 
    ... Tile 1951:
    ... #.##...##.
    ... #.####...#
    ... .....#..##
    ... #...######
    ... .##.#....#
    ... .###.#####
    ... ###.##.##.
    ... .###....#.
    ... ..#.#..#.#
    ... #...##.#..
    ... 
    ... Tile 1171:
    ... ####...##.
    ... #..##.#..#
    ... ##.#..#.#.
    ... .###.####.
    ... ..###.####
    ... .##....##.
    ... .#...####.
    ... #.##.####.
    ... ####..#...
    ... .....##...
    ... 
    ... Tile 1427:
    ... ###.##.#..
    ... .#..#.##..
    ... .#.##.#..#
    ... #.#.#.##.#
    ... ....#...##
    ... ...##..##.
    ... ...#.#####
    ... .#.####.#.
    ... ..#..###.#
    ... ..##.#..#.
    ... 
    ... Tile 1489:
    ... ##.#.#....
    ... ..##...#..
    ... .##..##...
    ... ..#...#...
    ... #####...#.
    ... #..#.#.#.#
    ... ...#.#.#..
    ... ##.#...##.
    ... ..##.##.##
    ... ###.##.#..
    ... 
    ... Tile 2473:
    ... #....####.
    ... #..#.##...
    ... #.##..#...
    ... ######.#.#
    ... .#...#.#.#
    ... .#########
    ... .###.#..#.
    ... ########.#
    ... ##...##.#.
    ... ..###.#.#.
    ... 
    ... Tile 2971:
    ... ..#.#....#
    ... #...###...
    ... #.#.###...
    ... ##.##..#..
    ... .#####..##
    ... .#..####.#
    ... #..#.#..#.
    ... ..####.###
    ... ..#.#.###.
    ... ...#.#.#.#
    ... 
    ... Tile 2729:
    ... ...#.#.#.#
    ... ####.#....
    ... ..#.#.....
    ... ....#..#.#
    ... .##..##.#.
    ... .#.####...
    ... ####.#.#..
    ... ##.####...
    ... ##..#.##..
    ... #.##...##.
    ... 
    ... Tile 3079:
    ... #.#.#####.
    ... .#..######
    ... ..#.......
    ... ######....
    ... ####.#..#.
    ... .#...#.##.
    ... #.#####.##
    ... ..#.###...
    ... ..#.......
    ... ..#.###...
    ... """))

Tile class:

    >>> t = Tile(["Tile 1:", "#..#", "##..", ".###"])
    >>> t.id
    1
    >>> t.data
    [['#', '.', '.', '#'], ['#', '#', '.', '.'], ['.', '#', '#', '#']]
    >>> (t.height, t.width)
    (3, 4)
    >>> print(t)
    #..#
    ##..
    .###

    Get borders:
    >>> t.border(Side.TOP)
    '#..#'
    >>> t.border(Side.BOTTOM)
    '.###'
    >>> t.border(Side.LEFT)
    '##.'
    >>> t.border(Side.RIGHT)
    '#.#'

    Rotate 90ยบ clockwise:
    >>> t.rotate()
    >>> (t.height, t.width)
    (4, 3)
    >>> print(t)
    .##
    ##.
    #..
    #.#

    Flip vertically:
    >>> t.flip()
    >>> (t.height, t.width)
    (4, 3)
    >>> print(t)
    #.#
    #..
    ##.
    .##

    Rotate and flip until a condition is met:
    >>> orientate_until(t, lambda t: "".join(t.data[0]) == "###.")
    >>> print(t)
    ###.
    ..##
    #..#

    Should leave it the same orientation if the condition is never met:
    >>> orientate_until(t, lambda _: False)
    >>> print(t)
    ###.
    ..##
    #..#

Part 1:

    >>> assembled = ImageAssembler().assemble(tiles)

    >>> orientate_until(
    ...     assembled,
    ...     lambda a: a.data[0][0].id == 1951 and a.data[0][-1].id == 3079
    ... )

    >>> print("\n".join("  ".join(str(t.id) for t in r) for r in assembled.data))
    1951  2311  3079
    2729  1427  2473
    2971  1489  1171

    >>> print(assembled)
    #...##.#.. ..###..### #.#.#####.
    ..#.#..#.# ###...#.#. .#..######
    .###....#. ..#....#.. ..#.......
    ###.##.##. .#.#.#..## ######....
    .###.##### ##...#.### ####.#..#.
    .##.#....# ##.##.###. .#...#.##.
    #...###### ####.#...# #.#####.##
    .....#..## #...##..#. ..#.###...
    #.####...# ##..#..... ..#.......
    #.##...##. ..##.#..#. ..#.###...
    <BLANKLINE>
    #.##...##. ..##.#..#. ..#.###...
    ##..#.##.. ..#..###.# ##.##....#
    ##.####... .#.####.#. ..#.###..#
    ####.#.#.. ...#.##### ###.#..###
    .#.####... ...##..##. .######.##
    .##..##.#. ....#...## #.#.#.#...
    ....#..#.# #.#.#.##.# #.###.###.
    ..#.#..... .#.##.#..# #.###.##..
    ####.#.... .#..#.##.. .######...
    ...#.#.#.# ###.##.#.. .##...####
    <BLANKLINE>
    ...#.#.#.# ###.##.#.. .##...####
    ..#.#.###. ..##.##.## #..#.##..#
    ..####.### ##.#...##. .#.#..#.##
    #..#.#..#. ...#.#.#.. .####.###.
    .#..####.# #..#.#.#.# ####.###..
    .#####..## #####...#. .##....##.
    ##.##..#.. ..#...#... .####...#.
    #.#.###... .##..##... .####.##.#
    #...###... ..##...#.. ...#..####
    ..#.#....# ##.#.#.... ...##.....

    >>> part1(assembled)
    20899048083289

Part 2:

    >>> assembled.trim()
    >>> print(assembled)
    .#.#..#. ##...#.# #..#####
    ###....# .#....#. .#......
    ##.##.## #.#.#..# #####...
    ###.#### #...#.## ###.#..#
    ##.#.... #.##.### #...#.##
    ...##### ###.#... .#####.#
    ....#..# ...##..# .#.###..
    .####... #..#.... .#......
    <BLANKLINE>
    #..#.##. .#..###. #.##....
    #.####.. #.####.# .#.###..
    ###.#.#. ..#.#### ##.#..##
    #.####.. ..##..## ######.#
    ##..##.# ...#...# .#.#.#..
    ...#..#. .#.#.##. .###.###
    .#.#.... #.##.#.. .###.##.
    ###.#... #..#.##. ######..
    <BLANKLINE>
    .#.#.### .##.##.# ..#.##..
    .####.## #.#...## #.#..#.#
    ..#.#..# ..#.#.#. ####.###
    #..####. ..#.#.#. ###.###.
    #####..# ####...# ##....##
    #.##..#. .#...#.. ####...#
    .#.###.. ##..##.. ####.##.
    ...###.. .##...#. ..#..###

    >>> img = assembled.image()
    >>> print(img)
    .#.#..#.##...#.##..#####
    ###....#.#....#..#......
    ##.##.###.#.#..######...
    ###.#####...#.#####.#..#
    ##.#....#.##.####...#.##
    ...########.#....#####.#
    ....#..#...##..#.#.###..
    .####...#..#.....#......
    #..#.##..#..###.#.##....
    #.####..#.####.#.#.###..
    ###.#.#...#.######.#..##
    #.####....##..########.#
    ##..##.#...#...#.#.#.#..
    ...#..#..#.#.##..###.###
    .#.#....#.##.#...###.##.
    ###.#...#..#.##.######..
    .#.#.###.##.##.#..#.##..
    .####.###.#...###.#..#.#
    ..#.#..#..#.#.#.####.###
    #..####...#.#.#.###.###.
    #####..#####...###....##
    #.##..#..#...#..####...#
    .#.###..##..##..####.##.
    ...###...##...#...#..###
    
    >>> part2(img)
    273

    >>> monsters = MonsterFinder().find(img)
    >>> print(monsters.image)
    .####...#####..#...###..
    #####..#..#.#.####..#.#.
    .#.#...#.###...#.##.O#..
    #.O.##.OO#.#.OO.##.OOO##
    ..#O.#O#.O##O..O.#O##.##
    ...#.#..##.##...#..#..##
    #.##.#..#.#..#..##.#.#..
    .###.##.....#...###.#...
    #.####.#.#....##.#..#.#.
    ##...#..#....#..#...####
    ..#.##...###..#.#####..#
    ....#.##.#.#####....#...
    ..##.##.###.....#.##..#.
    #...#...###..####....##.
    .#.##...#.##.#.#.###...#
    #.###.#..####...##..#...
    #.###...#.##...#.##O###.
    .O##.#OO.###OO##..OOO##.
    ..O#.O..O..O.#O##O##.###
    #.#..##.########..#..##.
    #.#####..#.#...##..#....
    #....##..#.#########..##
    #...#.....#..##...###.##
    #..###....##.#...##.##.#
