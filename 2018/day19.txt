Setup:

    >>> import logging
    >>> import logging.config
    >>> from io import StringIO

    >>> from day19 import execute_program, read_data

    >>> logging.config.fileConfig("../logging.conf")

    >>> data = read_data(StringIO("""\
    ... #ip 0
    ... seti 5 0 1
    ... seti 6 0 2
    ... addi 0 1 0
    ... addr 1 2 3
    ... setr 1 0 0
    ... seti 8 0 4
    ... seti 9 0 5
    ... """))

Part 1:

    >>> logging.getLogger().setLevel(logging.DEBUG)
    >>> execute_program(data)
    ip=0 [0, 0, 0, 0, 0, 0] seti 5 0 1 [0, 5, 0, 0, 0, 0]
    ip=1 [1, 5, 0, 0, 0, 0] seti 6 0 2 [1, 5, 6, 0, 0, 0]
    ip=2 [2, 5, 6, 0, 0, 0] addi 0 1 0 [3, 5, 6, 0, 0, 0]
    ip=4 [4, 5, 6, 0, 0, 0] setr 1 0 0 [5, 5, 6, 0, 0, 0]
    ip=6 [6, 5, 6, 0, 0, 0] seti 9 0 5 [6, 5, 6, 0, 0, 9]
    [7, 5, 6, 0, 0, 9]

Part 2:

    No example.

Program:

    #ip 3

     0  addi 3 16 3     # ip = (0) + 16

    goto 17

     1  seti 1 2 1      # reg[1] = 1
     2  seti 1 1 2      # reg[2] = 1
     3  mulr 1 2 5      # reg[5] = reg[1] * reg[2]
     4  eqrr 5 4 5      # reg[5] = reg[5] == reg[4]
     5  addr 5 3 3      # ip = reg[5] + (5)
     6  addi 3 1 3      # ip = (6) + 1
     7  addr 1 0 0      # reg[0] = reg[1] + reg[0]
     8  addi 2 1 2      # reg[2] = reg[2] + 1
     9  gtrr 2 4 5      # reg[5] = reg[2] > reg[4]
    10  addr 3 5 3      # ip = (10) + reg[5]
    11  seti 2 3 3      # ip = 2
    12  addi 1 1 1      # reg[1] = reg[1] + 1
    13  gtrr 1 4 5      # reg[5] = reg[1] > reg[4]
    14  addr 5 3 3      # ip = reg[5] + (14)
    15  seti 1 6 3      # ip = 1
    16  mulr 3 3 3      # ip = (16) * (16)

    for reg[1] in 1..reg[4] do
        for reg[2] in 1..reg[4] do
            if reg[1] * reg[2] == reg[4] then
                reg[0] += reg[1]
    EXIT

    17  addi 4 2 4      # reg[4] = reg[4] + 2
    18  mulr 4 4 4      # reg[4] = reg[4] * reg[4]
    19  mulr 3 4 4      # reg[4] = (19) * reg[4]
    20  muli 4 11 4     # reg[4] = reg[4] * 11
    21  addi 5 5 5      # reg[5] = reg[5] + 5
    22  mulr 5 3 5      # reg[5] = reg[5] * (22)
    23  addi 5 15 5     # reg[5] = reg[5] + 15
    24  addr 4 5 4      # reg[4] = reg[4] + reg[5]
    25  addr 3 0 3      # ip = 25 + reg[0]
    26  seti 0 6 3      # ip = 0

    reg[4] = (2 * 2) * 19 * 11 + (5 * 22 + 15)
    if reg[0] == 0 then
        goto 1

    27  setr 3 5 5      # reg[5] = (27)
    28  mulr 5 3 5      # reg[5] = reg[5] * (28)
    29  addr 3 5 5      # reg[5] = (29) + reg[5]
    30  mulr 3 5 5      # reg[5] = (30) * reg[5]
    31  muli 5 14 5     # reg[5] = reg[5] * 14
    32  mulr 5 3 5      # reg[5] = reg[5] * (32)
    33  addr 4 5 4      # reg[4] = reg[4] + reg[5]
    34  seti 0 5 0      # reg[0] = 0
    35  seti 0 1 3      # ip = 0

    reg[4] += (27 * 28 + 29) * 30 * 14 * 32
    reg[0] = 0
    goto 1
